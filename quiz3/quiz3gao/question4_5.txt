4- What is the difference between code-first approach and database approach in Entity
framework?

answer:
In code-first approach we will first create entity classes with properties defined in it. 
Entity framework will create the database and tables based on the entity classes defined. 
So database is generated from the code. When the dot net code is run database will get created.

In database first approach, Database and tables are created first. 
Then you create entity Data Model using the created database.

In question 1 and 2, we are using code-first approach.



5- What is the MVVM design pattern?
answer:

MVVM (Model-View-ViewModel)

The Model View ViewModel (MVVM) is an architectural pattern used in software engineering that originated from Microsoft 
which is specialized in the Presentation Model design pattern. It is based on the Model-view-controller pattern (MVC), 
and is targeted at modern UI development platforms (WPF and Silverlight) in which there is a UX developer who has 
different requirements than a more "traditional" developer. MVVM is a way of creating client applications that leverages 
core features of the WPF platform, allows for simple unit testing of application functionality, and helps developers and 
designers work together with less technical difficulties.


VIEW: A View is defined in XAML and should not have any logic in the code-behind. 
It binds to the view-model by only using data binding. The View contains the visual controls that will be shown to the 
user and can also contain animations, navigation aspects, themes, and other interactive features for the purpose of the 
visual presentation. The View is data bound directly to the Model. Parts of the Model are simply displayed in the view by 
one-way data binding. Other parts of the model can be edited by directly binding controls two-way to the data. It acts as 
a bridge between your software and its users.

MODEL: Model is responsible for exposing data in a way that is easily consumable by WPF. 
It must implement INotifyPropertyChanged and/or INotifyCollectionChanged as appropriate. 
When data is expensive to fetch, it abstracts away the expensive operations, never blocking the UI thread. 
It is the data or business logic, completely UI independent, that stores the state and does the processing of the problem domain. 
The Model is written in code or is represented by pure data encoded in relational tables or XML.

VIEWMODEL: A ViewModel is a model for a view in the application or we can say as abstraction of the view. 
It exposes data relevant to the view and exposes the behaviors for the views, usually with Commands. 
The ViewModel is the glue between the View and the outside world. The ViewModel is what the View is bound to. 
It provides a specialization of the Model that the View can use for data-binding.
